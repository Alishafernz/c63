{
  "main": "node_modules/expo/AppEntry.js",
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web",
    "eject": "expo eject"
  },
  "dependencies": {
    "expo": "~41.0.1",
    "expo-status-bar": "~1.0.4",
    "react": "16.13.1",
    "react-dom": "16.13.1",
    "react-native": "https://github.com/expo/react-native/archive/sdk-41.0.0.tar.gz",
    "react-native-web": "~0.13.12",
    "react-native-elements": "2.2.1",
    "@expo/vector-icons": "^12.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.9.0"
  },
  "private": true
}

<text
onChangeText={ text=>
    this.setState({
        text:text,
        isSearchedPressed:false,
        word:"Loading...",
        lexicalCategory:'',
        examples:[],
        definition:''
    });

/<text>

<input
onChangeText={ text => }
this.setState({
  text:text,
  issearchPressed:false,
  word  :"Loading...",
  lexicalCategory:'',
  excamples:[],
  definition:""
  });
  />

  <input
  onChangeText={ text=>
  this.setState({
    text:text,
    isSearchPressed:false,
    word:"Loading...",
    lexicalCategory:'',
    examples:[],
    definition:""
  });
  }
  <input
  onChangeText={ text =>
  this.setState({
    text:text,
    isSearchPressed:false,
    word :"Loading..."
    lexicalCategory:'',
    examples:[],
    definition:""
    
  )};
  }
<TextInput
style={ styles.inputbox}
onChangeText={ text => }
this.setState({
  text:text,
  isSearchPressed:false,
  word :"loading...",
  lexicalCategory:'',
  examples:[],
  definition :
)};

}   